% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/loglik_control.R
\docType{class}
\name{loglik_control_class}
\alias{loglik_control_class}
\alias{loglik_control}
\alias{loglik_control-class}
\title{Control Structure for Maximum Likelihood Optimization}
\usage{
loglik_control(
  method = c("NewtonRaphson", "Levenberg", "Marquardt"),
  criterium = c("delta", "jacobian", "lnlik"),
  eps = 1e-07,
  nsteps = 200,
  hessian = c("calculate", "expected"),
  lambda = 1,
  lambda_multiplier = 10,
  reduce = TRUE,
  replace_nan = FALSE,
  use_ginv = FALSE,
  replace_inf = FALSE
)
}
\arguments{
\item{method}{Character. Optimization algorithm: "NewtonRaphson" (default), "Levenberg", or "Marquardt".}

\item{criterium}{Character vector. Convergence criteria: "delta", "jacobian", "lnlik" (default all three).}

\item{eps}{Numeric. Convergence tolerance (default 1e-7).}

\item{nsteps}{Integer. Maximum iterations (default 200).}

\item{hessian}{Character. Hessian computation: "calculate" (analytic, default) or "expected" (outer product).}

\item{lambda}{Numeric. Initial damping parameter for Levenberg/Marquardt (default 1).}

\item{lambda_multiplier}{Numeric. Factor for lambda adjustment during optimization (default 10).}

\item{reduce}{Logical. Reduce data to relevant rows only (default TRUE).}

\item{replace_nan}{Logical. Replace NaN with 0 in derivatives (default FALSE).}

\item{use_ginv}{Logical. Use generalized inverse for singular matrices (default FALSE).}

\item{replace_inf}{Logical. Replace Inf with machine limits (default FALSE).}
}
\value{
An S3 object of class \code{loglik_control}, see \code{\link{loglik_control_class}} for structure.
}
\description{
S3 class defining control parameters for likelihood-based optimization routines.
}
\details{
Objects of this class contain:
\itemize{
\item{\code{method}: Optimization algorithm - "NewtonRaphson", "Levenberg", or "Marquardt".}
\item{\code{criterium}: Character vector of convergence criteria to evaluate: "delta" (parameter change), "jacobian" (gradient norm), "lnlik" (log-likelihood change).}
\item{\code{hessian}: Method for computing Hessian matrix - "calculate" (analytic second derivatives) or "expected" (outer product of scores).}
\item{\code{eps}: Numeric tolerance threshold for convergence.}
\item{\code{nsteps}: Maximum number of optimization iterations.}
\item{\code{lambda}: Initial damping parameter for Levenberg-Marquardt methods.}
\item{\code{lambda_multiplier}: Factor for adjusting lambda during optimization.}
\item{\code{reduce}: Logical flag to reduce dataset to only rows needed for parameter estimation.}
\item{\code{replace_nan}: Logical flag to replace NaN values with zero in derivative calculations.}
\item{\code{use_ginv}: Logical flag to use generalized inverse (MASS::ginv) instead of solve() for singular matrices.}
\item{\code{replace_inf}: Logical flag to replace infinite values with machine precision limits.}
}
}
\examples{
# Standard Newton-Raphson with default settings
ctrl1 <- loglik_control()

# Levenberg-Marquardt with stricter convergence
ctrl2 <- loglik_control(method = "Marquardt", eps = 1e-10)

# Robust settings for difficult problems
ctrl3 <- loglik_control(
  use_ginv = TRUE,
  replace_nan = TRUE,
  replace_inf = TRUE,
  nsteps = 500
)

}
\seealso{
\code{\link{loglik_control}}
}
